{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1KfCLTPA0bWUZcH8mWVyoWypDgKvMr_Vz","authorship_tag":"ABX9TyNpIXy6EwdIsh+sqi5PUzWo"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["1. satisfaction_level - Уровень удовлетворенности работой\n","2. Last_evaluation - Время с момента последней оценки в годах\n","3. number_projects - Количество проектов, выполненных за время работы\n","4. average_monthly_hours - Среднее количество часов на рабочем месте в месяц\n","5. time_spend_company - Стаж работы в компании в годах\n","6. work_accident - Происходили ли несчастные случаи на рабочем месте с сотрудником\n","7. left - уволился ли сотрудник\n","8. promotion_last_5years - повышался ли сотрудник за последние пять лет\n","9. department - отдел в котором работает сотрудник\n","10. salary - относительный уровень зарплаты\n"],"metadata":{"id":"SoqVlYzTHZAP"}},{"cell_type":"code","source":["from sklearn.datasets import fetch_openml\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import missingno as msno\n","from scipy import stats\n"],"metadata":{"id":"GFFzsLJdH1mu","executionInfo":{"status":"ok","timestamp":1729621082091,"user_tz":-180,"elapsed":4869,"user":{"displayName":"Александр Соловьёв","userId":"03262224744899439582"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["df = pd.read_csv('HR.csv')\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":443},"id":"2MlCCW7zHY1R","executionInfo":{"status":"ok","timestamp":1729621082091,"user_tz":-180,"elapsed":4,"user":{"displayName":"Александр Соловьёв","userId":"03262224744899439582"}},"outputId":"ecc0e4cc-1e20-48e0-819d-935c6ce48eeb"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       satisfaction_level  last_evaluation  number_project  \\\n","0                    0.38             0.53               2   \n","1                    0.80             0.86               5   \n","2                    0.11             0.88               7   \n","3                    0.72             0.87               5   \n","4                    0.37             0.52               2   \n","...                   ...              ...             ...   \n","14994                0.40             0.57               2   \n","14995                0.37             0.48               2   \n","14996                0.37             0.53               2   \n","14997                0.11             0.96               6   \n","14998                0.37             0.52               2   \n","\n","       average_montly_hours  time_spend_company  Work_accident  left  \\\n","0                       157                   3              0     1   \n","1                       262                   6              0     1   \n","2                       272                   4              0     1   \n","3                       223                   5              0     1   \n","4                       159                   3              0     1   \n","...                     ...                 ...            ...   ...   \n","14994                   151                   3              0     1   \n","14995                   160                   3              0     1   \n","14996                   143                   3              0     1   \n","14997                   280                   4              0     1   \n","14998                   158                   3              0     1   \n","\n","       promotion_last_5years department  salary  \n","0                          0      sales     low  \n","1                          0      sales  medium  \n","2                          0      sales  medium  \n","3                          0      sales     low  \n","4                          0      sales     low  \n","...                      ...        ...     ...  \n","14994                      0    support     low  \n","14995                      0    support     low  \n","14996                      0    support     low  \n","14997                      0    support     low  \n","14998                      0    support     low  \n","\n","[14999 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-a8076106-a246-41d7-88a6-659e3f544a61\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>satisfaction_level</th>\n","      <th>last_evaluation</th>\n","      <th>number_project</th>\n","      <th>average_montly_hours</th>\n","      <th>time_spend_company</th>\n","      <th>Work_accident</th>\n","      <th>left</th>\n","      <th>promotion_last_5years</th>\n","      <th>department</th>\n","      <th>salary</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.38</td>\n","      <td>0.53</td>\n","      <td>2</td>\n","      <td>157</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>sales</td>\n","      <td>low</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.80</td>\n","      <td>0.86</td>\n","      <td>5</td>\n","      <td>262</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>sales</td>\n","      <td>medium</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.11</td>\n","      <td>0.88</td>\n","      <td>7</td>\n","      <td>272</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>sales</td>\n","      <td>medium</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.72</td>\n","      <td>0.87</td>\n","      <td>5</td>\n","      <td>223</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>sales</td>\n","      <td>low</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.37</td>\n","      <td>0.52</td>\n","      <td>2</td>\n","      <td>159</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>sales</td>\n","      <td>low</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>14994</th>\n","      <td>0.40</td>\n","      <td>0.57</td>\n","      <td>2</td>\n","      <td>151</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>support</td>\n","      <td>low</td>\n","    </tr>\n","    <tr>\n","      <th>14995</th>\n","      <td>0.37</td>\n","      <td>0.48</td>\n","      <td>2</td>\n","      <td>160</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>support</td>\n","      <td>low</td>\n","    </tr>\n","    <tr>\n","      <th>14996</th>\n","      <td>0.37</td>\n","      <td>0.53</td>\n","      <td>2</td>\n","      <td>143</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>support</td>\n","      <td>low</td>\n","    </tr>\n","    <tr>\n","      <th>14997</th>\n","      <td>0.11</td>\n","      <td>0.96</td>\n","      <td>6</td>\n","      <td>280</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>support</td>\n","      <td>low</td>\n","    </tr>\n","    <tr>\n","      <th>14998</th>\n","      <td>0.37</td>\n","      <td>0.52</td>\n","      <td>2</td>\n","      <td>158</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>support</td>\n","      <td>low</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>14999 rows × 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a8076106-a246-41d7-88a6-659e3f544a61')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a8076106-a246-41d7-88a6-659e3f544a61 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a8076106-a246-41d7-88a6-659e3f544a61');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-163cd2a1-cb47-4cf0-82fe-8145a48877db\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-163cd2a1-cb47-4cf0-82fe-8145a48877db')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-163cd2a1-cb47-4cf0-82fe-8145a48877db button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 14999,\n  \"fields\": [\n    {\n      \"column\": \"satisfaction_level\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2486306510611418,\n        \"min\": 0.09,\n        \"max\": 1.0,\n        \"num_unique_values\": 92,\n        \"samples\": [\n          0.83,\n          0.13,\n          0.55\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"last_evaluation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.17116911062327592,\n        \"min\": 0.36,\n        \"max\": 1.0,\n        \"num_unique_values\": 65,\n        \"samples\": [\n          0.66,\n          0.44,\n          0.53\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"number_project\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 2,\n        \"max\": 7,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          2,\n          5,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"average_montly_hours\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 49,\n        \"min\": 96,\n        \"max\": 310,\n        \"num_unique_values\": 215,\n        \"samples\": [\n          118,\n          112,\n          222\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"time_spend_company\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 2,\n        \"max\": 10,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          6,\n          8,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Work_accident\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"left\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"promotion_last_5years\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"department\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"marketing\",\n          \"accounting\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"salary\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"low\",\n          \"medium\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["df.info() # проверяю на наличие пустых значений и типов данных"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PTdftutXHYw5","executionInfo":{"status":"ok","timestamp":1729621082091,"user_tz":-180,"elapsed":3,"user":{"displayName":"Александр Соловьёв","userId":"03262224744899439582"}},"outputId":"a550c2dc-ee09-49bd-a2c5-38222cd908ca"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 14999 entries, 0 to 14998\n","Data columns (total 10 columns):\n"," #   Column                 Non-Null Count  Dtype  \n","---  ------                 --------------  -----  \n"," 0   satisfaction_level     14999 non-null  float64\n"," 1   last_evaluation        14999 non-null  float64\n"," 2   number_project         14999 non-null  int64  \n"," 3   average_montly_hours   14999 non-null  int64  \n"," 4   time_spend_company     14999 non-null  int64  \n"," 5   Work_accident          14999 non-null  int64  \n"," 6   left                   14999 non-null  int64  \n"," 7   promotion_last_5years  14999 non-null  int64  \n"," 8   department             14999 non-null  object \n"," 9   salary                 14999 non-null  object \n","dtypes: float64(2), int64(6), object(2)\n","memory usage: 1.1+ MB\n"]}]},{"cell_type":"code","source":["df.describe() # посмотрим базовые характеристики числовых столбцов"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":320},"id":"Z_sCZwjqGx_F","executionInfo":{"status":"ok","timestamp":1729621083809,"user_tz":-180,"elapsed":5,"user":{"displayName":"Александр Соловьёв","userId":"03262224744899439582"}},"outputId":"bf54937a-8cea-41f7-abde-9c868e837c44"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       satisfaction_level  last_evaluation  number_project  \\\n","count        14999.000000     14999.000000    14999.000000   \n","mean             0.612834         0.716102        3.803054   \n","std              0.248631         0.171169        1.232592   \n","min              0.090000         0.360000        2.000000   \n","25%              0.440000         0.560000        3.000000   \n","50%              0.640000         0.720000        4.000000   \n","75%              0.820000         0.870000        5.000000   \n","max              1.000000         1.000000        7.000000   \n","\n","       average_montly_hours  time_spend_company  Work_accident          left  \\\n","count          14999.000000        14999.000000   14999.000000  14999.000000   \n","mean             201.050337            3.498233       0.144610      0.238083   \n","std               49.943099            1.460136       0.351719      0.425924   \n","min               96.000000            2.000000       0.000000      0.000000   \n","25%              156.000000            3.000000       0.000000      0.000000   \n","50%              200.000000            3.000000       0.000000      0.000000   \n","75%              245.000000            4.000000       0.000000      0.000000   \n","max              310.000000           10.000000       1.000000      1.000000   \n","\n","       promotion_last_5years  \n","count           14999.000000  \n","mean                0.021268  \n","std                 0.144281  \n","min                 0.000000  \n","25%                 0.000000  \n","50%                 0.000000  \n","75%                 0.000000  \n","max                 1.000000  "],"text/html":["\n","  <div id=\"df-d954e8f2-5e8d-48e9-8638-565facf96c46\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>satisfaction_level</th>\n","      <th>last_evaluation</th>\n","      <th>number_project</th>\n","      <th>average_montly_hours</th>\n","      <th>time_spend_company</th>\n","      <th>Work_accident</th>\n","      <th>left</th>\n","      <th>promotion_last_5years</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>14999.000000</td>\n","      <td>14999.000000</td>\n","      <td>14999.000000</td>\n","      <td>14999.000000</td>\n","      <td>14999.000000</td>\n","      <td>14999.000000</td>\n","      <td>14999.000000</td>\n","      <td>14999.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>0.612834</td>\n","      <td>0.716102</td>\n","      <td>3.803054</td>\n","      <td>201.050337</td>\n","      <td>3.498233</td>\n","      <td>0.144610</td>\n","      <td>0.238083</td>\n","      <td>0.021268</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.248631</td>\n","      <td>0.171169</td>\n","      <td>1.232592</td>\n","      <td>49.943099</td>\n","      <td>1.460136</td>\n","      <td>0.351719</td>\n","      <td>0.425924</td>\n","      <td>0.144281</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.090000</td>\n","      <td>0.360000</td>\n","      <td>2.000000</td>\n","      <td>96.000000</td>\n","      <td>2.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.440000</td>\n","      <td>0.560000</td>\n","      <td>3.000000</td>\n","      <td>156.000000</td>\n","      <td>3.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>0.640000</td>\n","      <td>0.720000</td>\n","      <td>4.000000</td>\n","      <td>200.000000</td>\n","      <td>3.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>0.820000</td>\n","      <td>0.870000</td>\n","      <td>5.000000</td>\n","      <td>245.000000</td>\n","      <td>4.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>7.000000</td>\n","      <td>310.000000</td>\n","      <td>10.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d954e8f2-5e8d-48e9-8638-565facf96c46')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d954e8f2-5e8d-48e9-8638-565facf96c46 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d954e8f2-5e8d-48e9-8638-565facf96c46');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0c7e2ad8-20b3-48ee-a580-0e7cf3932f14\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0c7e2ad8-20b3-48ee-a580-0e7cf3932f14')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0c7e2ad8-20b3-48ee-a580-0e7cf3932f14 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"satisfaction_level\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5302.752785300377,\n        \"min\": 0.09,\n        \"max\": 14999.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.6128335222348156,\n          0.64,\n          14999.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"last_evaluation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5302.725216503965,\n        \"min\": 0.17116911062327592,\n        \"max\": 14999.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.7161017401160078,\n          0.72,\n          14999.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"number_project\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5301.632605184108,\n        \"min\": 1.2325923553183857,\n        \"max\": 14999.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3.80305353690246,\n          4.0,\n          14999.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"average_montly_hours\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5240.043131004933,\n        \"min\": 49.943099371284305,\n        \"max\": 14999.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          201.0503366891126,\n          200.0,\n          14999.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"time_spend_company\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5301.586356319514,\n        \"min\": 1.4601362305354546,\n        \"max\": 14999.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          14999.0,\n          3.498233215547703,\n          4.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Work_accident\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5302.871740631288,\n        \"min\": 0.0,\n        \"max\": 14999.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.1446096406427095,\n          1.0,\n          0.3517185523801279\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"left\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5302.863271830312,\n        \"min\": 0.0,\n        \"max\": 14999.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.2380825388359224,\n          1.0,\n          0.425924099380363\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"promotion_last_5years\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5302.888447508509,\n        \"min\": 0.0,\n        \"max\": 14999.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.021268084538969265,\n          1.0,\n          0.1442814645785774\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["df.describe(include=[object])  # посмотрим базовые числовые характеристики строковых столбцов"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":174},"id":"Qe2ujn8jKv4F","executionInfo":{"status":"ok","timestamp":1729621085104,"user_tz":-180,"elapsed":674,"user":{"displayName":"Александр Соловьёв","userId":"03262224744899439582"}},"outputId":"7d663a9f-157f-43fb-a1b8-7ffdb8124965"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       department salary\n","count       14999  14999\n","unique         10      3\n","top         sales    low\n","freq         4140   7316"],"text/html":["\n","  <div id=\"df-a5ea00ba-2716-4f08-ba18-6f9b3be4c5f9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>department</th>\n","      <th>salary</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>14999</td>\n","      <td>14999</td>\n","    </tr>\n","    <tr>\n","      <th>unique</th>\n","      <td>10</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>top</th>\n","      <td>sales</td>\n","      <td>low</td>\n","    </tr>\n","    <tr>\n","      <th>freq</th>\n","      <td>4140</td>\n","      <td>7316</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a5ea00ba-2716-4f08-ba18-6f9b3be4c5f9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a5ea00ba-2716-4f08-ba18-6f9b3be4c5f9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a5ea00ba-2716-4f08-ba18-6f9b3be4c5f9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-abef73bf-b297-4358-8429-c039a60f68f8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-abef73bf-b297-4358-8429-c039a60f68f8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-abef73bf-b297-4358-8429-c039a60f68f8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"department\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          10,\n          \"4140\",\n          \"14999\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"salary\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          \"7316\",\n          \"14999\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["df.mode()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":132},"id":"SHCIgdixLIlX","executionInfo":{"status":"ok","timestamp":1729621086860,"user_tz":-180,"elapsed":5,"user":{"displayName":"Александр Соловьёв","userId":"03262224744899439582"}},"outputId":"98a49376-a0dd-4b92-aca4-28602fc64e2e"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   satisfaction_level  last_evaluation  number_project  average_montly_hours  \\\n","0                 0.1             0.55             4.0                   135   \n","1                 NaN              NaN             NaN                   156   \n","\n","   time_spend_company  Work_accident  left  promotion_last_5years department  \\\n","0                 3.0            0.0   0.0                    0.0      sales   \n","1                 NaN            NaN   NaN                    NaN        NaN   \n","\n","  salary  \n","0    low  \n","1    NaN  "],"text/html":["\n","  <div id=\"df-5686dfce-8b12-43d4-9b22-1b6f39a5bea4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>satisfaction_level</th>\n","      <th>last_evaluation</th>\n","      <th>number_project</th>\n","      <th>average_montly_hours</th>\n","      <th>time_spend_company</th>\n","      <th>Work_accident</th>\n","      <th>left</th>\n","      <th>promotion_last_5years</th>\n","      <th>department</th>\n","      <th>salary</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.1</td>\n","      <td>0.55</td>\n","      <td>4.0</td>\n","      <td>135</td>\n","      <td>3.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>sales</td>\n","      <td>low</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>156</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5686dfce-8b12-43d4-9b22-1b6f39a5bea4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5686dfce-8b12-43d4-9b22-1b6f39a5bea4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5686dfce-8b12-43d4-9b22-1b6f39a5bea4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9888a1a8-35b0-461d-be0b-43c012930764\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9888a1a8-35b0-461d-be0b-43c012930764')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9888a1a8-35b0-461d-be0b-43c012930764 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"satisfaction_level\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.1,\n        \"max\": 0.1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"last_evaluation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.55,\n        \"max\": 0.55,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.55\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"number_project\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 4.0,\n        \"max\": 4.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          4.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"average_montly_hours\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14,\n        \"min\": 135,\n        \"max\": 156,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          156\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"time_spend_company\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 3.0,\n        \"max\": 3.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Work_accident\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"left\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"promotion_last_5years\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"department\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"sales\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"salary\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"low\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["Рассчитайте и визуализировать корреляционную матрицу для\n","количественных переменных.\n","Определите две самые скоррелированные и две наименее\n","скоррелированные переменные."],"metadata":{"id":"CN31673PRgav"}},{"cell_type":"code","source":["cor = df[[\"satisfaction_level\", \"last_evaluation\",\"number_project\",\n","          \"average_montly_hours\",\"time_spend_company\"]]\n","ax = sns.heatmap(cor.corr(), annot=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":580},"id":"iJv1njxdRYjm","executionInfo":{"status":"ok","timestamp":1729621159222,"user_tz":-180,"elapsed":1311,"user":{"displayName":"Александр Соловьёв","userId":"03262224744899439582"}},"outputId":"626300f0-fa98-4f5a-8b38-2f13f053f4d5"},"execution_count":9,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Две самые скореллированные переменные: average_montly_hours и number_project - 0.\n","42\n","\n","Две наименее скоррелированные переменные average_montly_hours и satisfaction_level - (-0.02)"],"metadata":{"id":"ZHNprzhHUhGg"}},{"cell_type":"code","source":[],"metadata":{"id":"Ls5udC8FZpD3"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Рассчитайте сколько сотрудников работает в каждом\n","департаменте."],"metadata":{"id":"MOGLLuEHagJU"}},{"cell_type":"code","source":["department_counts = df['department'].value_counts()\n","department_counts"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":429},"id":"6j33jzMzahWc","executionInfo":{"status":"ok","timestamp":1729621162150,"user_tz":-180,"elapsed":526,"user":{"displayName":"Александр Соловьёв","userId":"03262224744899439582"}},"outputId":"2ae7185d-9d7c-455c-d2ed-097fe2833265"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["department\n","sales          4140\n","technical      2720\n","support        2229\n","IT             1227\n","product_mng     902\n","marketing       858\n","RandD           787\n","accounting      767\n","hr              739\n","management      630\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>department</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>sales</th>\n","      <td>4140</td>\n","    </tr>\n","    <tr>\n","      <th>technical</th>\n","      <td>2720</td>\n","    </tr>\n","    <tr>\n","      <th>support</th>\n","      <td>2229</td>\n","    </tr>\n","    <tr>\n","      <th>IT</th>\n","      <td>1227</td>\n","    </tr>\n","    <tr>\n","      <th>product_mng</th>\n","      <td>902</td>\n","    </tr>\n","    <tr>\n","      <th>marketing</th>\n","      <td>858</td>\n","    </tr>\n","    <tr>\n","      <th>RandD</th>\n","      <td>787</td>\n","    </tr>\n","    <tr>\n","      <th>accounting</th>\n","      <td>767</td>\n","    </tr>\n","    <tr>\n","      <th>hr</th>\n","      <td>739</td>\n","    </tr>\n","    <tr>\n","      <th>management</th>\n","      <td>630</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["plt.figure(figsize=(10, 6))\n","department_counts.plot(kind='bar')\n","plt.title('Количество сотрудников в каждом депортаменте')\n","plt.xlabel('Депортамент')\n","plt.ylabel('Количество сотрудников')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":643},"id":"4a0dM8Yjz-Jt","executionInfo":{"status":"ok","timestamp":1729621165074,"user_tz":-180,"elapsed":723,"user":{"displayName":"Александр Соловьёв","userId":"03262224744899439582"}},"outputId":"193cf1ce-efe1-451d-d398-aabee7eb911c"},"execution_count":11,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"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AAAAwAYotgAAAADABii2AAAAAMAG0nydLQB4WhQdvNTeER7q7Ngwe0cAAABpxJEtAAAAALABii0AAAAAsAGKLQAAAACwAYotAAAAALABii0AAAAAsAGKLQAAAACwAYotAAAAALABii0AAAAAsAGKLQAAAACwAYotAAAAALABii0AAAAAsAGKLQAAAACwAYotAAAAALABii0AAAAAsAGKLQAAAACwAYotAAAAALABii0AAAAAsAGKLQAAAACwAYotAAAAALABii0AAAAAsAG7FlsbN25UkyZNVKhQIZlMJi1atMhiuWEYGjZsmAoWLCg3NzeFhIToxIkTFn2uXr2qtm3bytPTU97e3urSpYtu3Lhh0Wf//v2qUaOGcuTIIT8/P40bN87WmwYAAADgKWfXYuvmzZuqUKGCPv/881SXjxs3TpMnT9b06dO1bds25cyZU6Ghobpz5465T9u2bXXo0CGtWrVKS5Ys0caNG9WtWzfz8tjYWDVo0ED+/v7atWuXPvnkE40YMUJfffWVzbcPAAAAwNMrmz2fvFGjRmrUqFGqywzD0MSJEzV06FA1a9ZMkjR79mz5+vpq0aJFat26tY4cOaLly5drx44dqlKliiRpypQpaty4sT799FMVKlRIc+bMUXx8vL799lu5uLiofPny2rt3rz777DOLoux+cXFxiouLM9+PjY3N4C0HAAAAkNVl2nO2zpw5o6ioKIWEhJjbvLy8VLVqVW3ZskWStGXLFnl7e5sLLUkKCQmRk5OTtm3bZu5Ts2ZNubi4mPuEhobq2LFj+vfff1N97jFjxsjLy8t88/Pzs8UmAgAAAMjCMm2xFRUVJUny9fW1aPf19TUvi4qKko+Pj8XybNmyKU+ePBZ9UlvH/c/xoCFDhujatWvm27lz5558gwAAAAA8Vew6jDCzcnV1laurq71jAAAAAHBgmfbIVoECBSRJ0dHRFu3R0dHmZQUKFNDFixctlickJOjq1asWfVJbx/3PAQAAAAAZLdMWW8WKFVOBAgW0Zs0ac1tsbKy2bdum4OBgSVJwcLBiYmK0a9cuc5+1a9cqKSlJVatWNffZuHGj7t69a+6zatUqlSlTRrlz5/6PtgYAAADA08auxdaNGze0d+9e7d27V9K9STH27t2ryMhImUwm9e3bV//73//066+/6sCBA2rfvr0KFSqk5s2bS5LKlSun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6dIW7cePH9eLL76oy5cv68CBA6pRo4ZiYmLsEzITKV26tKZNm6aQkJBUl69evVpvv/22jh8//h8ny/xy5cqlJUuWqHbt2hbt69evV5MmTXT9+nWdPn1aFStWTDFE82mV/AVIakwmkxITE//DNJnfX3/9JcMwVLx4cW3fvt3ii0sXFxf5+Pg45FByhhE6oNq1a+vy5cuKjY01D7eRpG7dunFi/kOMHDlSM2bM0LvvvquhQ4fq//2//6ezZ89q0aJFTCjyENmzZ9edO3fsHcPhjBw5Ul5eXvaO4XAuXLighISEFO0JCQnmoSSFChXS9evX/+tomVpCQoKOHj2aotg6evSo+YNcjhw50jxZUFZ3/vz5FPvqfqVLl9Y///zzHyZyHM2aNVPnzp01fvx4Pf/885KkHTt26L333lPz5s0l3Zsd+VH792mTlJRk7wgOxd/fX1LW228UWw7KMAzt2rVLp06dUps2beTh4SEXFxeKrYeYM2eOvv76a4WFhWnEiBF64403VKJECQUFBWnr1q3q06ePvSNmSuHh4fr44481Y8YMZcvG20VatG7dmgky0qFOnTrq3r27ZsyYoUqVKkm6d1SrZ8+eqlu3riTpwIEDKlasmD1jZjrt2rVTly5d9P7771t8AB49erTat28vSdqwYYPKly9vz5iZxq1bt5QjR46HLnd1deVLpof48ssv1a9fP7Vu3dr8xUi2bNnUoUMH83m+ZcuW1YwZM+wZM9NZs2aN1qxZo4sXL1oUESaTSd98840dk2VuJ06c0Lp161LsN0kO9yU5wwgd0F9//aWGDRsqMjJScXFxOn78uIoXL6533nlHcXFxTFyQipw5c+rIkSMqUqSIChYsqKVLl+q5557T6dOnValSJV27ds3eETOlFi1aaM2aNcqVK5cCAwNTjDdnyKqlh82ghMeLiopSu3bttGbNGmXPnl3SvaM29erV03fffSdfX1+tW7dOd+/eVYMGDeycNvNITEzU2LFjNXXqVEVHR0uSfH191bt3bw0aNEjOzs6KjIyUk5MT00/r3t/orFmzHnr0OSYmRp06dWJ41yPcuHHDPOtx8eLFLWarhaWRI0dq1KhRqlKligoWLJjiCPMvv/xip2SZ29dff62ePXsqX758KlCggMV+M5lMDne5HootB9S8eXN5eHjom2++Ud68ebVv3z4VL15c69evV9eu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TvfHH39Ikry9veXr6ytfX19NnTrVoU9vb6/WrVsns9msKVOmKDo6Wk1NTfbr2dnZ15wdM5lM6u3ttferqqpSSEiIJk6cqMDAQOXn5zuMExgYqK1btyouLk6enp7y9/fXzp07Ha4PN05paakkyWq1asGCBfL09FRAQIA2btyovr4++z1KS0tlMpm0YsUKh7Hfe+89mUwmPf/88/a2ixcvavPmzfL395enp6cWL16sQ4cOOdzrf2cA29vbZTKZdOzYMfvz4R7t7e3/758HAHCDUGwBAJzu4sWLkqSJEycO22fVqlXq7u7W/v371dDQoPDwcC1btkw9PT32PiEhIfaZsc7OTlVVVTnco6GhQatXr9aaNWvU3Nys7OxsZWZm2oukq7Zt26bQ0FA1NjYqIyNDL7/8sg4ePChJOnLkiP3+t99+u7Zv325/HRsbK0lycXFRQUGBvv/+e3388ceqqanRK6+84jCGh4eH6urqdOrUKXtbUVGR/P39Hfpt2rRJdXV1Kisr0/Hjx7Vq1So99thjam1tHdHvNiAgwJ6vvr5eklRfX29vCwgIGNF9AAD/nJvRAQAAN5+rBZOXl9c1r9fW1qq+vl7d3d32guydd97Rnj17VFlZqfXr10uS3Nzc5Ovra/+56dOnO9zHarVq2bJlyszMlCQFBwfrxIkT2rZtm8NsUlRUlDIyMux9bDab3n33XT388MMym832fq6urpo6darDmJKUmppqfx4YGKjc3FwlJSXp/ffft7dPmDBBcXFx+uijj5SZmana2lq5urrq3nvvtffp6OhQSUmJOjo6NHPmTEnS5s2bdeDAAZWUlOjNN9/8i9/qfzNezXfhwgVJktlsHpIZADD6mNkCADjd1dkdPz+/a15vampSX1+fvL29NXnyZPujra1NP/3004jHaWlpUVRUlENbVFSUWltb1d/fb2+LiIhw6BMREaGWlpYRj/P1119r2bJl8vf3l5eXl+Lj43X27FmdP3/eod/69etVXFysgYEBFRUV6cUXX3S43tzcrP7+fgUHBzu872+++cbhfZ87d87hekhIyIizAgCch5ktAIDTnThxQmazechM1FV9fX3y8/Nz2Kt01Vg7sbC9vV1PPvmkXnrpJb3xxhuaPn26amtr9cILL+jSpUvy8PCw97VYLJo5c6bKysr01VdfqaCgQNXV1fbrfX19cnV1VUNDg1xdXR3GmTx5sv25l5eXvvvuO/vrU6dO6YEHHhi9NwkA+FsotgAATlddXa3IyMhhr4eHh6urq0tubm4KDAz82+PMnz9fNpvNoc1msyk4ONihmDl8+LBDn8OHD2v+/PkjGqOhoUEDAwPKz8+Xi8uVBSMVFRXD9t+wYYOSkpIUExMzpHAMCwtTf3+/uru7tXTp0mHv4eLiorlz59pfu7nx5xwAxiL+dwYAOM3vv/+uzz77TPv379fOnTvV1dVlv3bu3DkNDg6qq6tL0dHRioiIUExMjPLy8hQcHKzTp09r7969WrlypcM+p7+Snp6u++67T1u3blVsbKzq6upUWFjosJdKulKA5eXlKSYmRgcPHtQXX3yhvXv3jmiMuXPn6vLly9qxY4eWL18um82mDz74YNj+q1evVldX15CTCaUr+8XWrl2rhIQE5efnKywsTL/++quqq6u1cOFCPfHEEyPKBAAYG9izBQBwmvLycq1bt06Dg4PauHGj/Pz87I/U1FT99ttv8vPz0y+//KJ9+/bp/vvvV2JiooKDg7VmzRr9/PPP8vHxGfF44eHhqqioUFlZmSwWi7KyspSTk+NwOIZ0pSg7evSowsLClJubK6vVqkcffXREY4SGhspqtertt9+WxWLRp59+qrfeemvY/pMmTdKrr7467MxZSUmJEhISlJ6ernnz5ikmJkZHjhzRrFmzRvy+AQBjg2lwcHDQ6BAAgJtDaWmpSktLr7kX6yqTyaS2trZ/tHzwegQGBio1NdXhREEAAG4EZrYAAE4zadKkYQ/FuMrHx2fI4RAAAIxH7NkCADhNbGys/YuAh/PnfVwAAIxnLCMEAAAAgFHAMkIAAAAAGAUUWwAAAAAwCii2AAAAAGAUUGwBAAAAwCig2AIAAACAUUCxBQAAAACjgGILAAAAAEYBxRYAAAAAjIL/ADonPuz0L5OiAAAAAElFTkSuQmCC\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Показать распределение сотрудников по зарплатам."],"metadata":{"id":"0nceq6WGbPU1"}},{"cell_type":"code","source":["df.salary.value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":209},"id":"rCmI9m9U0Ljx","executionInfo":{"status":"ok","timestamp":1729621166742,"user_tz":-180,"elapsed":4,"user":{"displayName":"Александр Соловьёв","userId":"03262224744899439582"}},"outputId":"a7d5058f-fe46-4d8b-bb9b-80aabd3bda52"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["salary\n","low       7316\n","medium    6446\n","high      1237\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>salary</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>low</th>\n","      <td>7316</td>\n","    </tr>\n","    <tr>\n","      <th>medium</th>\n","      <td>6446</td>\n","    </tr>\n","    <tr>\n","      <th>high</th>\n","      <td>1237</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["plt.figure(figsize=(10, 6))\n","sns.countplot(x='salary', data=df)\n","plt.title('Распределение сотрудников по зарплатам')\n","plt.xlabel('Уровень зарплаты')\n","plt.ylabel('Количество сотрудников')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":564},"id":"hF1GlmAMbS23","executionInfo":{"status":"ok","timestamp":1729621169105,"user_tz":-180,"elapsed":659,"user":{"displayName":"Александр Соловьёв","userId":"03262224744899439582"}},"outputId":"39de46dc-443b-486d-d0df-5071fd02f20b"},"execution_count":13,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"owQeHCyRb79V"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Показать распределение сотрудников по зарплатам в каждом\n","департаменте по отдельности"],"metadata":{"id":"Y-Cxdf0hbxfg"}},{"cell_type":"code","source":["df.pivot_table(index='department', columns='salary', aggfunc='size')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"id":"1zTF3Z1gxjEI","executionInfo":{"status":"ok","timestamp":1729621171862,"user_tz":-180,"elapsed":516,"user":{"displayName":"Александр Соловьёв","userId":"03262224744899439582"}},"outputId":"9c4f1cc7-d0d1-4b12-afc5-e0ea5b4894e5"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["salary       high   low  medium\n","department                     \n","IT             83   609     535\n","RandD          51   364     372\n","accounting     74   358     335\n","hr             45   335     359\n","management    225   180     225\n","marketing      80   402     376\n","product_mng    68   451     383\n","sales         269  2099    1772\n","support       141  1146     942\n","technical     201  1372    1147"],"text/html":["\n","  <div id=\"df-849d7351-298d-45db-8b75-593c0220a96c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>salary</th>\n","      <th>high</th>\n","      <th>low</th>\n","      <th>medium</th>\n","    </tr>\n","    <tr>\n","      <th>department</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>IT</th>\n","      <td>83</td>\n","      <td>609</td>\n","      <td>535</td>\n","    </tr>\n","    <tr>\n","      <th>RandD</th>\n","      <td>51</td>\n","      <td>364</td>\n","      <td>372</td>\n","    </tr>\n","    <tr>\n","      <th>accounting</th>\n","      <td>74</td>\n","      <td>358</td>\n","      <td>335</td>\n","    </tr>\n","    <tr>\n","      <th>hr</th>\n","      <td>45</td>\n","      <td>335</td>\n","      <td>359</td>\n","    </tr>\n","    <tr>\n","      <th>management</th>\n","      <td>225</td>\n","      <td>180</td>\n","      <td>225</td>\n","    </tr>\n","    <tr>\n","      <th>marketing</th>\n","      <td>80</td>\n","      <td>402</td>\n","      <td>376</td>\n","    </tr>\n","    <tr>\n","      <th>product_mng</th>\n","      <td>68</td>\n","      <td>451</td>\n","      <td>383</td>\n","    </tr>\n","    <tr>\n","      <th>sales</th>\n","      <td>269</td>\n","      <td>2099</td>\n","      <td>1772</td>\n","    </tr>\n","    <tr>\n","      <th>support</th>\n","      <td>141</td>\n","      <td>1146</td>\n","      <td>942</td>\n","    </tr>\n","    <tr>\n","      <th>technical</th>\n","      <td>201</td>\n","      <td>1372</td>\n","      <td>1147</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-849d7351-298d-45db-8b75-593c0220a96c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-849d7351-298d-45db-8b75-593c0220a96c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-849d7351-298d-45db-8b75-593c0220a96c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-55cc72b2-872e-429f-a858-7897ae70ab54\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-55cc72b2-872e-429f-a858-7897ae70ab54')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-55cc72b2-872e-429f-a858-7897ae70ab54 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"department\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"support\",\n          \"RandD\",\n          \"marketing\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"high\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 80,\n        \"min\": 45,\n        \"max\": 269,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          141,\n          51,\n          80\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"low\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 613,\n        \"min\": 180,\n        \"max\": 2099,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          1146,\n          364,\n          402\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"medium\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 493,\n        \"min\": 225,\n        \"max\": 1772,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          942,\n          372,\n          376\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["pivot_table = df.pivot_table(index='department', columns='salary', aggfunc='size', fill_value=0)\n","\n","pivot_table.plot(kind='bar', figsize=(12, 6))\n","\n","plt.title('Распределение сотрудников по зарплатам в каждом департаменте')\n","plt.xlabel('Департамент')\n","plt.ylabel('Количество сотрудников')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":643},"id":"jIEu6gQr2rRe","executionInfo":{"status":"ok","timestamp":1729621175423,"user_tz":-180,"elapsed":1028,"user":{"displayName":"Александр Соловьёв","userId":"03262224744899439582"}},"outputId":"f639b6d5-1da7-4b76-ed8d-2ba8329277d8"},"execution_count":15,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAA/YAAAJyCAYAAABuTlsuAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAACffUlEQVR4nOzdd3QUZdvH8d8mpDcIkAQkJKEXE6oivQepUiwIQigC8lAEVBBFmgWBR7qCjaaoWBB8UJHem4Khi5QgNXQSiiQkmfcPTvZlSQLZsMlmw/dzzp6TveeemWtmS/aauYvJMAxDAAAAAADAITnZOwAAAAAAAJB1JPYAAAAAADgwEnsAAAAAABwYiT0AAAAAAA6MxB4AAAAAAAdGYg8AAAAAgAMjsQcAAAAAwIGR2AMAAAAA4MBI7AEAAAAAcGAk9gAAAAAAODASe8CBzZ07VyaTyfxwd3dXmTJl1L9/f509e9be4QEAAADIAfnsHQCABzd27FiFhYXp5s2b2rhxo2bOnKlffvlFe/fulaenp73DAwAAAJCNSOyBPKB58+aqXr26JOnFF19UwYIFNWnSJC1ZskTPP/+8naMDAAAAkJ1oig/kQY0aNZIkxcTESJIuXbqkV199VeHh4fL29pavr6+aN2+uXbt2pVn35s2bGj16tMqUKSN3d3cVKVJE7du315EjRyRJx44ds2j+f/ejQYMG5m2tXbtWJpNJCxcu1BtvvKGgoCB5eXmpTZs2OnHiRJp9b9u2TU8++aT8/Pzk6emp+vXra9OmTekeY4MGDdLd/+jRo9PU/fLLL1WtWjV5eHjI399fHTt2THf/9zq2O6WkpGjKlCmqWLGi3N3dFRgYqD59+ujy5csW9UJDQ9WqVas0++nfv3+abaYX+8SJE9OcU0lKSEjQqFGjVKpUKbm5uSk4OFhDhw5VQkJCuufqbtu2bVOLFi1UoEABeXl5KSIiQlOnTrWos3r1atWtW1deXl7Knz+/nnrqKR04cMC8fPTo0fd8H5hMJq1du1bS7dfq0Ucf1Y4dO1SrVi15eHgoLCxMs2bNMm/v2rVr8vLy0ssvv5wm3pMnT8rZ2Vnjxo2zKO/WrVu6++3WrZtFvex4HVLf26nHKEmnT59WaGioqlevrmvXrpnLz507p549eyowMFDu7u6qVKmS5s2bZ7GPu997Li4uCg0N1WuvvabExMQ0sd9r3Xt9JjMbT0aeeuophYaGyt3dXQEBAWrTpo327NljUWfOnDlq1KiRAgIC5ObmpgoVKmjmzJlptpX6uixfvlyVK1eWu7u7KlSooEWLFlnUu7vLUWY+86Ghofd8T0rSkiVL1LJlSxUtWlRubm4qWbKk3n77bSUnJ5vrZPQ9k953gzXHbTKZNGjQoDTLmjVrJpPJlO779W53xuDs7KxHHnlEvXv31pUrVzK17p3nLSkpSS1atJC/v7/2799v1TFduXJF5cuX1+OPP65///3XXN6tWzeFhoZa1O3fv7+8vb21c+dOi/J7vYePHTtmUffo0aN65pln5O/vL09PTz3xxBP6+eefLeqkfj5NJpOio6Mtlp06dUrOzs4ymUz6/vvv73uuUo8lM981kvTrr7+avzt9fHzUsmVL7du3L1PbS+99umHDBj3zzDMqXry4+ft+8ODBFuc6dZve3t46evSomjVrJi8vLxUtWlRjx46VYRj3Pc93H1Nmfzdk9Vz/9ddfevrpp+Xv7y93d3dVr15dP/30k0Wd1M/+H3/8YVF+4cIFi/ewNf+PJOt+awCOhDv2QB6UmoQXLFhQ0u0fQosXL9YzzzyjsLAwnT17Vh9//LHq16+v/fv3q2jRopKk5ORktWrVSqtWrVLHjh318ssv6+rVq1qxYoX27t2rkiVLmvfx/PPPq0WLFhb7HT58eLrxvPvuuzKZTBo2bJjOnTunKVOmqEmTJoqOjpaHh4ek24lk8+bNVa1aNY0aNUpOTk7mH5UbNmzQ448/nma7xYoVMyd7165dU9++fdPd91tvvaVnn31WL774os6fP6/p06erXr16+vPPP5U/f/406/Tu3Vt169aVJC1atEg//vijxfI+ffpo7ty56t69uwYOHKiYmBjNmDFDf/75pzZt2iQXF5d0z4M1rly5kiaRlW5fVGjTpo02btyo3r17q3z58tqzZ48mT56sv//+W4sXL77ndlesWKFWrVqpSJEievnllxUUFKQDBw5o6dKl5qR65cqVat68uUqUKKHRo0fr33//1fTp01W7dm3t3LlToaGhat++vUqVKmXe7uDBg1W+fHn17t3bXFa+fHnz35cvX1aLFi307LPP6vnnn9e3336rvn37ytXVVT169JC3t7fatWunhQsXatKkSXJ2djav+/XXX8swDHXu3DnN8bi5uemzzz4zP3/x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Nm1qfs2slS9fPvXp08f83NXVVX369NG5c+e0Y8cOSbffx0WLFtWCBQvM9fbu3avdu3frhRdeSLPNzLwHUtn6dUiVkpKirl27auvWrfrll18sWrVIt+86BgUFWYx14eLiooEDB+ratWtat26dRf1r167pwoULOnXqlD755BPFxsaqcePGmTrGzLA2nvTcuHFDFy5cUHR0tD799FMFBgaqTJky5uWprXCk2y0ZLly4oPr16+vo0aOKi4uz2FbRokUt7s75+vqqa9eu+vPPPxUbG5vl40xMTLzn5/juOK9evaoLFy6obt26unHjhv766y+r92nNcbu6uqpz586aM2eOuSy1FZA1Ul+L2NhY/fDDD9q1a5dV75cZM2Zo3LhxmjZtmp566qkHOqY6dero448/1rvvvqsvv/zSXL5v3z4999xz6tKli1599dV040j9LN7v8/zLL7/o8ccfV506dcxl3t7e6t27t44dO2bRjUCSWrduLZPJZG7ivWHDBp08eVLPPffcPfeTXnz3i23FihW6cuWKnn/+eYvvGWdnZ9WoUeOe3833cudrcP36dV24cEG1atWSYRj6888/09Tv37+/+W+TyaT+/fsrMTFRK1eutGq/mf3dkCqz5/rSpUtavXq1nn32WfPn7sKFC7p48aKaNWumQ4cO6dSpUxbrpL73Uh+XLl2y6lhSZeW3BuBIaIoP5AEffvihypQpo3z58ikwMFBly5Y1/0OWbicfU6dO1UcffaSYmBiLPqSpzfWl2034y5Ytq3z5bPvVULp0aYvnJpNJpUqVMvedPHTokCQpKioqw23ExcWpQIEC5ucXLlxIs927HTp0SIZhZFjv7ibzqX1TM0riUrcZFxengICAdJefO3fO4vny5ctVuHDhe8Z5t1GjRqlo0aLq06dPmn6Jhw4d0oEDBzLc5t37v1NqF41HH300wzr//POPJKls2bJplpUvX16//fabrl+/Li8vr/sex52KFi2aZp3UZPDYsWN64okn5OTkpM6dO2vmzJm6ceOGPD09tWDBArm7u+uZZ55Js80LFy7Iz88vU/u39euQ6s0339TWrVtlMpl048aNNMv/+ecflS5d2uLzKP1/s9DU851qwIABFhfWunfvrsGDB1sV971YG096xo4dq/Hjx0u6/dleu3atxYW7TZs2adSoUdqyZUuacxIXF2fxmpUqVSrN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z1tcXFyGLQ5Onz5tMetEfHy85s+fr8qVK2e5Gf4333wjV1dXi37Yd0svzsTERH300UdZ2qe1x52qU6dOOnXqlAICAtJMS5gVqe+XzEx9WatWLTk7O8vLy0uzZs3S+vXrLb5XrDmmZcuWadGiRZo6dao8PT3l4eGhKlWqqHDhwuY73VOmTNHFixfTfHcmJibqp59+UqNGje57t7RFixbavn27tmzZYi67fv26PvnkE4WGhlqM6H+nHj16aPfu3eZp5qyR2e+aZs2aydfXV++9955u3bqVZvnd/8cyI73XwDCMNNOT3unO/9+GYWjGjBlycXGxeqyOzP5uuNv9znXqe/3jjz/WmTNn0izPynnKLGt/awCOhjv2wEOgVatWGjt2rLp3765atWppz549WrBgQZq+eF27dtX8+fM1ZMgQbd++XXXr1tX169e1cuVK/ec//8lyEuXv7686deqoe/fuOnv2rKZMmaJSpUqpV69ekm73C/zss8/UvHlzVaxYUd27d9cjjzyiU6dOac2aNfL19dX//vc/Xb9+XR9++KGmTZumMmXKWMxLm/pPevfu3dqyZYtq1qypkiVL6p133tHw4cN17NgxtW3bVj4+PoqJidGPP/6o3r1769VXX9XKlSv11ltvaffu3fe9a1a/fn316dNH48aNU3R0tCIjI+Xi4qJDhw7pu+++09SpU/X0009n6TwtX75cTZs2veedhC5duujbb7/VSy+9pDVr1qh27dpKTk7WX3/9pW+//Va//fZbhi0ZnJycNHPmTLVu3VqVK1dW9+7dVaRIEf3111/at2+ffvvtN0m3myk2b95cNWvWVM+ePc3T3fn5+aU7Z3hmFC1aVOPHj9exY8dUpkwZLVy4UNHR0frkk0/StA7p1KmThg4dqh9//FF9+/ZNs/zDDz/UiBEjVLhwYR05csQ8doB0O0k9evSoVqxYcd+uGhnJzOuQnlGjRumHH35Qr169tGnTJjk5Oal37976+OOP1a1bN+3YsUOhoaH6/vvvtWnTJk2ZMsWib7p0+6JCvnz5zE3xp0+fripVqtisibK18dzpl19+0WeffaZatWrJ399fR48e1aeffiovLy/zAHiRkZFydXVV69at1adPH127dk2ffvqpAgIC0v0RX6ZMGfXs2VO///67AgMDNXv2bJ09ezZLXQ8OHTqkUaNG6euvv9brr79+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hyQmJiolJUXBwcHy9PS0dzi4h8KFC+vYsWO6devWAyX2DJ4HAAAAAHmQkxPpXm5nq5YUvNIAAAAAADgwEnsAAAAAABwYiT0AAAAAIFcymUxavHixvcPI9UjsAQAAAABwYCT2AAAAAIA8KTEx0d4h5AgSewAAAABAtvn+++8VHh4uDw8PFSxYUE2aNNH169f1+++/q2nTpipUqJD8/PxUv3597dy5857bGjZsmMqUKSNPT0+VKFFCb731lm7dumVePnr0aFWuXFmfffaZwsLC5O7urvnz56tgwYJKSEiw2Fbbtm3VpUuXbDnmnEZiDwAAAADIFmfOnNHzzz+vHj166MCBA1q7dq3at28vwzB09epVRUVFaePGjdq6datKly6tFi1a6OrVqxluz8fHR3PnztX+/fs1depUffrpp5o8ebJFncOHD+uHH37QokWLFB0drWeeeUbJycn66aefzHXOnTunn3/+WT169Mi2Y89J+ewdAAAAAAAgbzpz5oySkpLUvn17hYSESJLCw8MlSY0aNbKo+8knnyh//vxat26dWrVqle72RowYYf47NDRUr776qr755hsNHTrUXJ6YmKj58+ercOHC5rJOnTppzpw5euaZZyRJX375pYoXL64GDRrY5DjtjTv2AAAAAIBsUalSJTVu3Fjh4eF65pln9Omnn+ry5cuSpLNnz6pXr14qXbq0/Pz85Ovrq2vXrun48eMZbm/hwoWqXbu2goKC5O3trREjRqSpHxISYpHUS1KvXr20fPlynTp1SpI0d+5cdevWTSaTycZHbB8k9gAAAACAbOHs7KwVK1bo119/VYUKFTR9+nSVLVtWMTExioqKUnR0tKZOnarNmzcrOjpaBQsWzHDAuy1btqhz585q0aKFli5dqj///FNvvvlmmvpeXl5p1q1SpYoqVaqk+fPna8eOHdq3b5+6deuWHYdsFzTFBwAAAABkG5PJpNq1a6t27doaOXKkQkJC9OOPP2rTpk366KOP1KJFC0nSiRMndOHChQy3s3nzZoWEhOjNN980l/3zzz+ZjuPFF1/UlClTdOrUKTVp0kTBwcFZP6hchsQeAAAAyMtG+z3g+nG2iQMPpW3btmnVqlWKjIxUQECAtm3bpvPnz6t8+fIqXbq0vvjiC1WvXl3x8fF67bXX5OHhkeG2SpcurePHj+ubb77RY489pp9//lk//vhjpmPp1KmTXn31VX366aeaP3++LQ4v16ApPgAAAAAgW/j6+mr9+vVq0aKFypQpoxEjRuiDDz5Q8+bN9fnnn+vy5cuqWrWqunTpooEDByogICDDbbVp00aDBw9W//79VblyZW3evFlvvfVWpmPx8/NThw4d5O3trbZt29rg6HIPk2EYhr2DyO3i4+Pl5+enuLg4+fr62jscAAAAIPO4Y//QuXnzpmJiYszzuOP/NW7cWBUrVtS0adPsHYqke79W1uShNMUHAAAAAORply9f1tq1a7V27Vp99NFH9g7H5kjsAQAAAAB5WpUqVXT58mWNHz9eZcuWtXc4NkdiDwAAAADI044dO2bvELIVg+cBAAAAAODASOwBAAAAAHBgJPYAAAAAADgwEnsAAAAAABwYiT0AAAAAAA6MxB4AAAAAAAfGdHcAAAAA8JAIff3nHN3fsfdbWlW/QYMGqly5sqZMmZLucpPJpB9//FFt27bN1PbWrl2rhg0b6vLly8qfP79VsTgSEnsAAAAAgEM4c+aMChQoYO8wch0SewAAAACAQwgKCrJ3CLkSfewBAAAAALlGSkqKhg4dKn9/fwUFBWn06NHmZSaTSYsXLzY/37x5sypXrix3d3dVr15dixcvlslkUnR0tMU2d+zYoerVq8vT01O1atXSwYMHc+ZgcgiJPQAAAAAg15g3b568vLy0bds2TZgwQWPHjtWKFSvS1IuPj1fr1q0VHh6unTt36u2339awYcPS3eabb76pDz74QH/88Yfy5cunHj16ZPdh5Ci7Jvbjxo3TY489Jh8fHwUEBKht27ZprpzcvHlT/fr1U8GCBeXt7a0OHTro7NmzFnWOHz+uli1bytPTUwEBAXrttdeUlJRkUWft2rWqWrWq3NzcVKpUKc2dOze7Dw8AAAAAYKWIiAiNGjVKpUuXVteuXVW9enWtWrUqTb2vvvpKJpNJn376qSpUqKDmzZvrtddeS3eb7777rurXr68KFSro9ddf1+bNm3Xz5s3sPpQcY9fEft26derXr5+2bt2qFStW6NatW4qMjNT169fNdQYPHqz//e9/+u6777Ru3TqdPn1a7du3Ny9PTk5Wy5YtlZiYqM2bN2vevHmaO3euRo4caa4TExOjli1bqmHDhoqOjtagQYP04osv6rfffsvR4wUAAAAA3FtERITF8yJFiujcuXNp6h08eFARERFyd3c3lz3++OP33WaRIkUkKd1tOiq7Dp63bNkyi+dz585VQECAduzYoXr16ikuLk6ff/65vvrqKzVq1EiSNGfOHJUvX15bt27VE088oeXLl2v//v1auXKlAgMDVblyZXMTjNGjR8vV1VWzZs1SWFiYPvjgA0lS+fLltXHjRk2ePFnNmjVLE1dCQoISEhLMz+Pj47PxLAAAAAAAUrm4uFg8N5lMSklJsdk2TSaTJD3wNnOTXNXHPi4uTpLk7+8v6fYAB7du3VKTJk3MdcqVK6fixYtry5YtkqQtW7YoPDxcgYGB5jrNmjVTfHy89u3bZ65z5zZS66Ru427jxo2Tn5+f+REcHGy7gwQAAAAAPLCyZctqz549Fjdlf//9dztGZD+5JrFPSUnRoEGDVLt2bT366KOSpNjYWLm6uip//vwWdQMDAxUbG2uuc2dSn7o8ddm96sTHx+vff/9NE8vw4cMVFxdnfpw4ccImxwgAAAAAsI1OnTopJSVFvXv31oEDB/Tbb7/pv//9r6T/vyv/sMg189j369dPe/fu1caNG+0ditzc3OTm5mbvMAAAAADApo6939LeIdiMr6+v/ve//6lv376qXLmywsPDNXLkSHXq1Mmi3/3DIFck9v3799fSpUu1fv16FStWzFweFBSkxMREXblyxeKu/dmzZxUUFGSus337dovtpY6af2edu0fSP3v2rHx9feXh4ZEdhwQAAAAAsNLatWvTlN05b71hGBbLatWqpV27dpmfL1iwQC4uLipevLgkqUGDBmnWqVy5cpoyR2fXpviGYah///768ccftXr1aoWFhVksr1atmlxcXCymNjh48KCOHz+umjVrSpJq1qypPXv2WIxouGLFCvn6+qpChQrmOndPj7BixQrzNgAAAAAAjmf+/PnauHGjYmJitHjxYg0bNkzPPvvsQ3cD16537Pv166evvvpKS5YskY+Pj7lPvJ+fnzw8POTn56eePXtqyJAh8vf3l6+vrwYMGKCaNWvqiSeekCRFRkaqQoUK6tKliyZMmKDY2FiNGDFC/fr1Mzenf+mllzRjxgwNHTpUPXr00OrVq/Xtt9/q559/ttuxAwAAAAAeTGxsrEaOHKnY2FgVKVJEzzzzjN599117h5XjTIYd2yBkNKDBnDlz1K1bN0nSzZs39corr+jrr79WQkKCmjVrpo8++sjc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0Jo1axQcHGznaPOGW7duyc3NTZK0cuVKtWnTRpJUrlw5nTlzxp6h5TmTJ0+WdPt3+qxZsywuULm6uio0NFSzZs2yV3h5Sl5M1q3BHfs8xMnJSWfPnlXhwoXtHcpDo3v37rp27Zq+++67dJc//fTT8vX11ezZs3M4srzvkUce0YoVK9Lcjd+3b58iIyN16tQp7dy5U5GRkbpw4YKdosxbZs2apTFjxqhz586qVq2avLy8LJan/jDEg3NycjLfNU7v37SHh4emT5+uHj165HRoed7rr7+u+Ph4zZgxQ05Ot4ciSklJ0csvvywfHx+9++67eumll7Rv3z5t3LjRztHmDV9//bU++eQTffbZZypZsqQk6fDhw+rTp4969+6t2rVrq2PHjgoKCtL3339v52jzhho1aqhhw4Zq2bKlIiMjtXXrVlWqVElbt27V008/bdH/HrbRsGFD/fjjj2m6VgG2QmKfhzg5OcnPz+++fUsuXbqUQxHlfWXKlNFHH32kJk2apLt85cqV+s9//qO///47hyPL+7y9vbV06VI1aNDAonzt2rVq3bq1rl69qqNHj6py5cppukkga1KTnPSYTCYlJyfnYDR52z///CPDMFSiRAlt377d4oKtq6urAgICaJacTQoXLqxNmzapTJkyFuV///23atWqpQsXLmjPnj2qW7eurly5Yp8g85iSJUvqhx9+UOXKlS3K//zzT3Xo0EFHjx7V5s2b1aFDB+4m28jatWvVrl07xcfHKyoqynwD4o033tBff/2lRYsW2TnCvOXWrVsqV66cli5dqvLly9s7nIdCcnKyJk+erG+//VbHjx9XYmKixfK8mA/RFD+PGTNmjPz8/OwdxkPj9OnTaX783alMmTI6depUDkb08HjqqafUo0cPffDBB3rsscckSb///rteffVVtW3bVtLtUX7v9frAOikpKfYO4aEREhIiiXNuD0lJSfrrr7/SfHf89ddf5otX7u7umR6gCfd35swZJSUlpSlPSkoyd0MpWrSorl69mtOh5VkNGjTQhQsXFB8fb+7+IEm9e/dmEOZs4OLiops3b9o7jIfKmDFj9Nlnn+mVV17RiBEj9Oabb+rYsWNavHhxnh0cksQ+j+nYsSOD5+WgGzduyN3dPcPlbm5ufJFnk48//liDBw9Wx44dzT8I8+XLp6ioKHN/tnLlyumzzz6zZ5h5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YmNjG3SP7t27w8jICJs3b8bs2bNx/vx5rFmz5onXv/jii1i1apVmDv2j5HI5Fi5ciIiICNTV1eGFF17A7du3kZGRATMzMwQFBTUoExERkVixsCciImrhdu/ejZkzZwIA3nrrLbz11ls613Tq1AnFxcX44Ycf8O677yIkJATl5eWwtbWFt7c3bGxsGny/5cuXo6ioCH5+fjA1NcUbb7yBcePG4fbt21rXBQYG4s8//4SnpycMDQ3x9ttvaxbo+2+srKyQnJyMZcuWIT4+Hu7u7li/fj3Gjh37xH8TERHxxHNr1qyBlZUVYmJiUFRUBHNzc7i7u2PZsmUN+6GJiIhETFb/cMNZIiIiapGSk5ORnJz81L3UZTIZiouLGzUE/+8YNmwYXF1dsXHjxma5HxERET0Z97EnIiJq4dq0afPEBfMesrGxadDcdiIiIpIeDsUnIiJq4QICAhAQEPDUax6dd09ERETPFg7FJyIiIiIiIhIxDsUnIiIiIiIiEjEW9kREREREREQixsKeiIiIiIiISMRY2BMRERERERGJGAt7IiIiIiIiIhFjYU9EREREREQkYizsiYiIiIiIiESMhT0RERERERGRiP0fjSYwepti85cAAAAASUVORK5CYII=\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"7V3TxuEl3Zqe"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Проверить гипотезу, что сотрудники с высоким окладом\n","проводят на работе больше времени, чем сотрудники с низким\n","окладом"],"metadata":{"id":"Jzv-bcex3Y_Q"}},{"cell_type":"code","source":["print('Среднее количество рабочих часов сотрудников c низким окладом', df[df.salary == 'low']['average_montly_hours'].mean())\n","print('Среднее количество рабочих часов сотрудников с высоким окладом', df[df.salary == 'high']['average_montly_hours'].mean())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5M8ayoWQ6Z9h","executionInfo":{"status":"ok","timestamp":1729621180799,"user_tz":-180,"elapsed":557,"user":{"displayName":"Александр Соловьёв","userId":"03262224744899439582"}},"outputId":"081578a5-9131-4b43-9685-8d583df5ef53"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["Среднее количество рабочих часов сотрудников c низким окладом 200.9965828321487\n","Среднее количество рабочих часов сотрудников с высоким окладом 199.86742118027485\n"]}]},{"cell_type":"code","source":["salary_low = df[df['salary'] == 'low']['average_montly_hours']\n","salary_high = df[df['salary'] == 'high']['average_montly_hours']\n","\n","result = stats.ttest_ind(salary_low, salary_high, equal_var=False)\n","\n","alpha = 0.05\n","\n","if (result.pvalue < alpha):\n","    print('Отклоняем нулевую гипотезу >> Сотрудники с высоким окладом проводят на работе больше времени, чем сотрудники с низким окладом')\n","else:\n","    print('Не отклоняем нулевую гипотезу >> Различия незначительны')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ogoNaLlc7Q3p","executionInfo":{"status":"ok","timestamp":1729621184042,"user_tz":-180,"elapsed":523,"user":{"displayName":"Александр Соловьёв","userId":"03262224744899439582"}},"outputId":"ed24409d-b489-47fd-a870-6ba34dbcf7de"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["Не отклоняем нулевую гипотезу >> Различия незначительны\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"eFuSm9JxB72J","executionInfo":{"status":"ok","timestamp":1729621187575,"user_tz":-180,"elapsed":501,"user":{"displayName":"Александр Соловьёв","userId":"03262224744899439582"}}},"execution_count":17,"outputs":[]},{"cell_type":"markdown","source":["Рассчитать следующие показатели среди уволившихся и не\n","уволившихся сотрудников (по отдельности):\n","\n","● Доля сотрудников с повышением за последние 5 лет\n","\n","● Средняя степень удовлетворенности\n","\n","● Среднее количество проектов"],"metadata":{"id":"u0sRvkLZBy_f"}},{"cell_type":"markdown","source":["satisfaction_level - Уровень удовлетворенности работой\n","\n","Last_evaluation - Время с момента последней оценки в годах\n","\n","number_projects - Количество проектов, выполненных за время работы\n","\n","average_monthly_hours - Среднее количество часов на рабочем месте в месяц\n","\n","time_spend_company - Стаж работы в компании в годах\n","\n","work_accident - Происходили ли несчастные случаи на рабочем месте с сотрудником\n","\n","left - уволился ли сотрудник\n","\n","promotion_last_5years - повышался ли сотрудник за последние пять лет\n","\n","department - отдел в котором работает сотрудник\n","\n","salary - относительный уровень зарплаты"],"metadata":{"id":"zse9vx8gWHiT"}},{"cell_type":"code","source":["tolerate = df[(df['left'] == 0)]\n","gone =  df[(df['left'] == 1)]"],"metadata":{"id":"jSljkJiLBy27","executionInfo":{"status":"ok","timestamp":1729621929723,"user_tz":-180,"elapsed":533,"user":{"displayName":"Александр Соловьёв","userId":"03262224744899439582"}}},"execution_count":35,"outputs":[]},{"cell_type":"code","source":["tolerate_promotion = tolerate[\"promotion_last_5years\"].value_counts(normalize=True)[1]"],"metadata":{"id":"2lQm6p2wEHZq","executionInfo":{"status":"ok","timestamp":1729622663632,"user_tz":-180,"elapsed":526,"user":{"displayName":"Александр Соловьёв","userId":"03262224744899439582"}}},"execution_count":43,"outputs":[]},{"cell_type":"code","source":["tolerate_satisfaction = tolerate[\"satisfaction_level\"].value_counts(normalize=True).mean()"],"metadata":{"id":"kx0hx_KfdkOO","executionInfo":{"status":"ok","timestamp":1729622765660,"user_tz":-180,"elapsed":513,"user":{"displayName":"Александр Соловьёв","userId":"03262224744899439582"}}},"execution_count":46,"outputs":[]},{"cell_type":"code","source":["tolerate_number_projects = tolerate[\"number_project\"].value_counts(normalize=True).mean()"],"metadata":{"id":"XjaaSUMUd-Db","executionInfo":{"status":"ok","timestamp":1729622774476,"user_tz":-180,"elapsed":504,"user":{"displayName":"Александр Соловьёв","userId":"03262224744899439582"}}},"execution_count":48,"outputs":[]},{"cell_type":"code","source":["gone_promotion = gone[\"promotion_last_5years\"].value_counts(normalize=True)[1]"],"metadata":{"id":"Q-Ou06QQdbFV","executionInfo":{"status":"ok","timestamp":1729622790110,"user_tz":-180,"elapsed":516,"user":{"displayName":"Александр Соловьёв","userId":"03262224744899439582"}}},"execution_count":49,"outputs":[]},{"cell_type":"code","source":["gone_satisfaction = gone[\"satisfaction_level\"].value_counts(normalize=True).mean()"],"metadata":{"id":"Y9tTugcwd2f0","executionInfo":{"status":"ok","timestamp":1729622791899,"user_tz":-180,"elapsed":2,"user":{"displayName":"Александр Соловьёв","userId":"03262224744899439582"}}},"execution_count":50,"outputs":[]},{"cell_type":"code","source":["gone_number_projects = gone[\"number_project\"].value_counts(normalize=True).mean()"],"metadata":{"id":"TWCTTqrrf38_","executionInfo":{"status":"ok","timestamp":1729622793565,"user_tz":-180,"elapsed":2,"user":{"displayName":"Александр Соловьёв","userId":"03262224744899439582"}}},"execution_count":51,"outputs":[]},{"cell_type":"code","source":["results = pd.DataFrame({\n","    'Показатели': ['Повышались за последние 5 лет', 'Средняя степень удовлетворенности','Среднее количество проектов'],\n","    'Терпят': [tolerate_promotion, tolerate_satisfaction, tolerate_number_projects],\n","    'Уволились': [gone_promotion, gone_satisfaction, gone_number_projects]\n","    })\n","\n","results"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"A1NIH-_zg5XO","executionInfo":{"status":"ok","timestamp":1729622886865,"user_tz":-180,"elapsed":541,"user":{"displayName":"Александр Соловьёв","userId":"03262224744899439582"}},"outputId":"489cd5cc-883e-4b2b-eaad-cb8e88155359"},"execution_count":55,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                          Показатели    Терпят  Уволились\n","0      Повышались за последние 5 лет  0.026251   0.005321\n","1  Средняя степень удовлетворенности  0.011236   0.012346\n","2        Среднее количество проектов  0.200000   0.166667"],"text/html":["\n","  <div id=\"df-d2ead357-4e4b-4c38-8027-190c48fcf7bd\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Показатели</th>\n","      <th>Терпят</th>\n","      <th>Уволились</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Повышались за последние 5 лет</td>\n","      <td>0.026251</td>\n","      <td>0.005321</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Средняя степень удовлетворенности</td>\n","      <td>0.011236</td>\n","      <td>0.012346</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Среднее количество проектов</td>\n","      <td>0.200000</td>\n","      <td>0.166667</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d2ead357-4e4b-4c38-8027-190c48fcf7bd')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d2ead357-4e4b-4c38-8027-190c48fcf7bd button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d2ead357-4e4b-4c38-8027-190c48fcf7bd');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9c66248d-e64d-4502-9998-043266ff148f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9c66248d-e64d-4502-9998-043266ff148f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9c66248d-e64d-4502-9998-043266ff148f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"results","summary":"{\n  \"name\": \"results\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"\\u041f\\u043e\\u043a\\u0430\\u0437\\u0430\\u0442\\u0435\\u043b\\u0438\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\u041f\\u043e\\u0432\\u044b\\u0448\\u0430\\u043b\\u0438\\u0441\\u044c \\u0437\\u0430 \\u043f\\u043e\\u0441\\u043b\\u0435\\u0434\\u043d\\u0438\\u0435 5 \\u043b\\u0435\\u0442\",\n          \"\\u0421\\u0440\\u0435\\u0434\\u043d\\u044f\\u044f \\u0441\\u0442\\u0435\\u043f\\u0435\\u043d\\u044c \\u0443\\u0434\\u043e\\u0432\\u043b\\u0435\\u0442\\u0432\\u043e\\u0440\\u0435\\u043d\\u043d\\u043e\\u0441\\u0442\\u0438\",\n          \"\\u0421\\u0440\\u0435\\u0434\\u043d\\u0435\\u0435 \\u043a\\u043e\\u043b\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043e \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442\\u043e\\u0432\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0422\\u0435\\u0440\\u043f\\u044f\\u0442\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1049173738471185,\n        \"min\": 0.011235955056179778,\n        \"max\": 0.2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.026251312565628283,\n          0.011235955056179778,\n          0.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0423\\u0432\\u043e\\u043b\\u0438\\u043b\\u0438\\u0441\\u044c\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.09119289010831011,\n        \"min\": 0.005320638476617194,\n        \"max\": 0.16666666666666666,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.005320638476617194,\n          0.012345679012345678,\n          0.16666666666666666\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":55}]},{"cell_type":"markdown","source":["Разделить данные на тестовую и обучающую выборки\n","\n","Построить модель LDA, предсказывающую уволился ли\n","сотрудник на основе имеющихся факторов (кроме department и\n","salary)\n","\n","Оценить качество модели на тестовой выборки"],"metadata":{"id":"6C-vRVILEHKT"}},{"cell_type":"code","source":[],"metadata":{"id":"2AuwNvFhEQqm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n","\n","from sklearn import linear_model\n","reg = linear_model.LinearRegression()\n","reg.fit(x_train, y_train)"],"metadata":{"id":"gSsHeSUQGHY9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import mean_squared_error\n","pred =  reg.predict(x_test)\n","print(f\"Точность модели равна: {mean_squared_error(y_test,pred)}\")"],"metadata":{"id":"FJhjT4kQGHWn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"bUdW_PzpGHUB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"jI404J4OGHRa"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"1hZvbmW1GHOi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"aDRAZRZAGHLr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"-K-HAs77GHJF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","# Рассчитываем показатели для уволившихся сотрудников\n","fired_employees = df[df['employment_status'] == 'fired']\n","fired_promotion_rate = fired_employees['promotion_last_5_years'].mean()\n","fired_avg_satisfaction = fired_employees['satisfaction_level'].mean()\n","fired_avg_projects = fired_employees['number_of_projects'].mean()\n","\n","# Рассчитываем показатели для не уволившихся сотрудников\n","not_fired_employees = df[df['employment_status'] == 'not_fired']\n","not_fired_promotion_rate = not_fired_employees['promotion_last_5_years'].mean()\n","not_fired_avg_satisfaction = not_fired_employees['satisfaction_level'].mean()\n","not_fired_avg_projects = not_fired_employees['number_of_projects'].mean()\n","\n","# Вывод результатов\n","print(f\"Уволившиеся сотрудники:\")\n","print(f\"Доля сотрудников с повышением за последние 5 лет: {fired_promotion_rate:.2f}\")\n","print(f\"Средняя степень удовлетворенности: {fired_avg_satisfaction:.2f}\")\n","print(f\"Среднее количество проектов: {fired_avg_projects:.2f}\\n\")\n","\n","print(f\"Не уволившиеся сотрудники:\")\n","print(f\"Доля сотрудников с повышением за последние 5 лет: {not_fired_promotion_rate:.2f}\")\n","print(f\"Средняя степень удовлетворенности: {not_fired_avg_satisfaction:.2f}\")\n","print(f\"Среднее количество проектов: {not_fired_avg_projects:.2f}\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":547},"id":"odPkRohdGHGB","executionInfo":{"status":"error","timestamp":1729548059019,"user_tz":-180,"elapsed":544,"user":{"displayName":"Александр Соловьёв","userId":"03262224744899439582"}},"outputId":"9aea46b5-4552-4e8b-c773-6c55b593647c"},"execution_count":105,"outputs":[{"output_type":"error","ename":"KeyError","evalue":"'employment_status'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3804\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3805\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3806\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32mindex.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n","\u001b[0;32mindex.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n","\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n","\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'employment_status'","\nThe above exception was the direct cause of the following exception:\n","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m<ipython-input-105-ae271e4e2f78>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# Рассчитываем показатели для уволившихся сотрудников\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mfired_employees\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'employment_status'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m'fired'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mfired_promotion_rate\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfired_employees\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'promotion_last_5_years'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmean\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mfired_avg_satisfaction\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfired_employees\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'satisfaction_level'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmean\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mfired_avg_projects\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfired_employees\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'number_of_projects'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmean\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   4100\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnlevels\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4101\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_getitem_multilevel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4102\u001b[0;31m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4103\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mis_integer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4104\u001b[0m                 \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3810\u001b[0m             ):\n\u001b[1;32m   3811\u001b[0m                 \u001b[0;32mraise\u001b[0m \u001b[0mInvalidIndexError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3812\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3813\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3814\u001b[0m             \u001b[0;31m# If we have a listlike key, _check_indexing_error will raise\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'employment_status'"]}]}]}